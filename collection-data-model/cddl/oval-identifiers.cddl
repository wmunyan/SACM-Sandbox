; #### identifier definition ####

identifier = $identifier .within identifier-struct

identifier-struct = { 
  identifier-name-key => qualified-name,
  administrative-domain-key => tstr,
  ? identifier-data-key => {+ (uint => any)},
}

identifier-name-key = 1
administrative-domain-key = 2
identifier-data-key = 3

; #### end of identifier definition ####

; #### oval identifier definition ####

$identifier /= identifier-generator

identifier-generator = {
  identifier-name-key => oval-generator,
  administrative-domain-key => tstr,
  identifier-data-key => {
    product-name-key => tstr,
    product-version-key => tstr,
    ? schema-version-key => [ + tstr],
    ? timestamp-key => tdate,
  },
}

$identifier /= identifier-system

identifier-system = {
  identifier-name-key => oval-system,
  administrative-domain-key => tstr,
  identifier-data-key => {
    host-name-key => tstr,
    architecture-key => tstr,
  },
}

$identifier /= identifier-os

identifier-os = {
  identifier-name-key => oval-os,
  administrative-domain-key => tstr,
  identifier-data-key => {
    family-key => tstr,
  },
}

$identifier /= identifier-environment

identifier-environment = {
  identifier-name-key => oval-environment,
  administrative-domain-key => tstr,
  identifier-data-key => {
    name-key => tstr,
  },
}

$identifier /= identifier-oval

identifier-oval = {
  identifier-name-key => oval-id,
  administrative-domain-key => tstr,
  identifier-data-key => {
    id-key => tstr,
    type-key => &(
      collection: 0,
      item: 1,
    ),
  },
}

system-name = 1
  host-name-key = 0
  architecture-key = 1

generator-name = 2
  product-name-key = 0
  product-version-key = 1
  schema-version-key = 2
  timestamp-key = 3

os-name = 3
  family-key = 0
  
environment-name = 4
  name-key = 0  
  
oval-id-name = 5
  id-key = 0
  type-key = 1

oval-generator = [pen.test, label.sacmid, generator-name, 1]
oval-system = [pen.test, label.sacmid, system-name, 1]
oval-os = [pen.test, label.sacmid, os-name, 1]
oval-environment = [pen.test, label.sacmid, environment-name, 1]
oval-id = [pen.test, label.sacmid, oval-id-name, 1]

label.sacmid = 0
pen.test = 0

; #### end of oval identifier definition ####

; #### common type definition ####

qualified-name = [
  pen,
  label,
  name,
  ?version
]

pen = uint
label = uint
name = uint
version = uint

; #### end of common type definition ####
